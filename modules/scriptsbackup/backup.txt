import os
import re
import subprocess
from datetime import datetime
import sys

if os.geteuid() != 0:
    print("Must be run as root")
    exit()

def sortervalue(e):
    regex = r'\d+'
    matches = re.findall(regex,e)
    result = ''.join(matches)
    return result

def doer():
    timedate = datetime.now().strftime('%c')

    backupspath = str('/usr/share/mcbackupsoftware/backups')
    newbackuppath = str("%s/\'%s\'" % (backupspath, timedate)) 

    blacklist = list()

    operation = subprocess.run((str('ls %s' % backupspath)), stdout=subprocess.PIPE, shell=True)
    backupscontents = list(operation.stdout.decode().split('\n'))#.sort(key=sorter).reverse() # The contents of the backups folder as a list 
    backupscontents.sort(key=sortervalue) # Youngest last!

    while("" in backupscontents):
    	backupscontents.remove("")

    if backupscontents != None:                             # Creation of removal blacklist
        for i in range(len(backupscontents) - 4):
            blacklist.append(backupscontents[i])

    if len(blacklist) >= 1:
        for i in blacklist:
            os.system(str('sudo rm -r %s/\'%s\'' % (backupspath, i)))

    os.system("sudo cp -r /opt/minecraft/ %s" % newbackuppath)

def doersmall(directory):
    timedate = datetime.now().strftime('%c')

    backupspath = directory
    newbackuppath = str("%s/\'%s\'" % (backupspath, timedate))
    
    os.system("sudo cp -r /opt/minecraft/ %s" % newbackuppath)

if len(sys.argv) == 3 and sys.argv[2] == "--directory":
    if os.path.exists(sys.argv[3]):
        doersmall(sys.argv[3])
    else:
        print("That directory doesn't exist, make it!")
    quit()
elif len(sys.argv) == 2:
    print("Available options:")
    print("--directory [desired location] - Make a backup in a desired directory")
    print("--help - list options")
    print("No parameters - Will save a backup in it's default directory")
    quit()
elif len(sys.argv) == 1:
    doer()
    quit()
else:
    print("(DEBUG) a number of inputs that wasn't 2 and was invalid")
    print("Available options:")
    print("--directory [desired location] - Make a backup in a desired directory")
    print("--help - list options")
    print("No parameters - Will save a backup in it's default directory")
    quit()
